"""Initial revision

Revision ID: 5b89bdcf57c4
Revises: 
Create Date: 2025-04-15 15:04:33.119841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5b89bdcf57c4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_items',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('calories', sa.Float(), nullable=False),
    sa.Column('proteins', sa.Float(), nullable=False),
    sa.Column('fats', sa.Float(), nullable=False),
    sa.Column('carbs', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('ix_food_items_name_ilike', 'food_items', ['name'], unique=False, postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops'})
    op.create_index('ix_food_items_name_lower', 'food_items', [sa.literal_column('lower(name)')], unique=False, postgresql_using='btree')
    op.create_index('ix_food_items_name_trgm', 'food_items', ['name'], unique=False, postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops'})
    op.create_table('test_questions',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('text', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('options', 'input', 'NOT_STATED', name='questiontype'), server_default=sa.text("'NOT_STATED'"), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('email', postgresql.CITEXT(length=120), nullable=False),
    sa.Column('hashed_password', sa.String(length=86), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('workouts',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('calories_burned', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meals',
    sa.Column('mealtime', sa.Enum('BREAKFAST', 'LUNCH', 'DINNER', 'SNACK', name='mealtime'), server_default=sa.text("'SNACK'"), nullable=False),
    sa.Column('meal_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'NOT_STATED', name='gender'), server_default=sa.text("'NOT_STATED'"), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('goal', sa.Enum('LOSE_WEIGHT', 'KEEPING_FIT', 'GAIN_MUSCLE_MASS', 'NOT_STATED', name='currentgoal'), server_default=sa.text("'NOT_STATED'"), nullable=False),
    sa.Column('birthday_date', sa.Date(), nullable=True),
    sa.Column('activity_level', sa.Enum('SEDENTARY', 'LIGHT', 'MODERATE', 'ACTIVE', 'ATHLETE', 'NOT_STATED', name='activitylevel'), server_default=sa.text("'NOT_STATED'"), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('test_results',
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('birthday_date', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'NOT_STATED', name='gender'), nullable=False),
    sa.Column('goal', sa.Enum('LOSE_WEIGHT', 'KEEPING_FIT', 'GAIN_MUSCLE_MASS', 'NOT_STATED', name='currentgoal'), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_workouts',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('workout_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workout_id'], ['workouts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workout_id', 'user_id', 'id')
    )
    op.create_table('meal_food_items',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('food_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['food_item_id'], ['food_items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meal_id'], ['meals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('meal_id', 'food_item_id', 'id')
    )
    op.create_index('idx_meal_food_composite', 'meal_food_items', ['meal_id', 'food_item_id'], unique=True)
    op.create_index('idx_meal_food_food_id', 'meal_food_items', ['food_item_id'], unique=False)
    op.create_index('idx_meal_food_meal_id', 'meal_food_items', ['meal_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_meal_food_meal_id', table_name='meal_food_items')
    op.drop_index('idx_meal_food_food_id', table_name='meal_food_items')
    op.drop_index('idx_meal_food_composite', table_name='meal_food_items')
    op.drop_table('meal_food_items')
    op.drop_table('user_workouts')
    op.drop_table('test_results')
    op.drop_table('profile')
    op.drop_table('meals')
    op.drop_table('workouts')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('test_questions')
    op.drop_index('ix_food_items_name_trgm', table_name='food_items', postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops'})
    op.drop_index('ix_food_items_name_lower', table_name='food_items', postgresql_using='btree')
    op.drop_index('ix_food_items_name_ilike', table_name='food_items', postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops'})
    op.drop_table('food_items')
    # ### end Alembic commands ###
