'''
‚úÖ–°—Ö–µ–º—ã –¥–∞–Ω–Ω—ã—Ö (Pydantic)
–§–∞–π–ª –Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ API, –∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞

üü¢BaseModel - –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å Pydantic, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –º—ã –Ω–∞—Å–ª–µ–¥—É–µ–º —Å—Ö–µ–º—ã
üü¢EmailStr - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è email-–∞–¥—Ä–µ—Å–æ–º
üü¢Field - –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞–∫—Å. –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏)
'''
from pydantic import BaseModel, EmailStr, Field, ConfigDict, model_validator
from datetime import date
from typing import Optional

from app.models.users import UserRole, Gender, ActivityLevel


class UserResponse(BaseModel): # –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ
    '''
    –°—Ö–µ–º–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API
    '''
    id: int # –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    name: str # –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    email: str # email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username: str
    birthday_date: Optional[date] = None
    weight: Optional[float] = None  
    height: Optional[int] = None  
    gender: Optional[Gender] = None  
    activity_level: Optional[ActivityLevel] = None  
    role: UserRole  


    model_config = ConfigDict(from_attributes=True)  

     # –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã SQLAlchemy –≤ response_model
#  –ë–µ–∑ from_attributes = True FastAPI –Ω–µ —Å–º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç SQLAlchemy –≤ JSON



class UserCreate(BaseModel): # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    '''
    –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    '''
    name: str = Field(min_length=2, max_length=30, example='–ê–Ω–¥—Ä–µ–π')  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏
    email: EmailStr = Field(example='user@example.com')  # –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ email
    username: str = Field(min_length=3, max_length=20, example='andrey123')
    password: str = Field(min_length=6, max_length=50, example='securepassword_123')  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
    birthday_date: Optional[date] = None
    weight: Optional[float] = Field(ge=30, le=300, example=75.5)  # –í–µ—Å –æ—Ç 30 –¥–æ 300 –∫–≥
    height: Optional[int] = Field(ge=100, le=250, example=180)  # –†–æ—Å—Ç –æ—Ç 100 –¥–æ 250 —Å–º
    gender: Optional[Gender] = None  
    activity_level: Optional[ActivityLevel] = None  

    model_config = ConfigDict(from_attributes=True)

    @model_validator(mode='after') # after, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π.
    def check_age(self):
        today = date.today()
        age = today.year - self.birthday_date.year - (
            (today.month, today.day) < (self.birthday_date.month, self.birthday_date.day))

        if age <= 0:
            raise ValueError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!')
        if age > 120:
            raise ValueError('–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 120 –ª–µ—Ç')
        return self


class UserUpdate(BaseModel):
    '''–°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'''
    name: Optional[str] = Field(min_length=3, max_length=20, example='new_name')
    email: Optional[EmailStr] = Field(example='new_email@example.com')
    password: Optional[str] = Field(min_length=6, max_length=50, example='new_secure_password')
    weight: Optional[float] = Field(ge=30, le=300, example=80.0)  
    height: Optional[int] = Field(ge=100, le=250, example=175)  
    gender: Optional[Gender] = None  
    activity_level: Optional[ActivityLevel] = None  

    model_config = ConfigDict(from_attributes=True) 


class UserUpdateAdmin(BaseModel):
    '''–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω).'''
    goal_id: Optional[int] = None 
    name: Optional[str] = Field(min_length=2, max_length=30, example='admin')
    email: Optional[EmailStr] = Field(example='admin@example.com')
    username: Optional[str] = Field(min_length=3, max_length=20, example='admin_user')
    password: Optional[str] = Field(min_length=6, max_length=50, example='admin_password')
    birthday_date: Optional[date] = None
    role: Optional[UserRole]   
    weight: Optional[float] = Field(None, ge=30, le=300, example=80.0) 
    height: Optional[int] = Field(None, ge=100, le=250, example=175)  
    gender: Optional[Gender] = None  
    activity_level: Optional[ActivityLevel] = None 
     
    model_config = ConfigDict(from_attributes=True)