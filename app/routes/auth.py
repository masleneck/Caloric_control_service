from fastapi import APIRouter, Depends, HTTPException, status
from fastapi.security import OAuth2PasswordRequestForm
from sqlalchemy.ext.asyncio import AsyncSession
from datetime import timedelta

from app.schemas.users import UserCreate, UserResponse
from app.crud.users import create_user, get_user_by_username
from app.core.security import verify_password, create_access_token
from app.core.db import get_async_session
from app.core.config import settings

router = APIRouter(
    prefix='/auth', 
    tags=['–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è üõ°Ô∏è']
    )


@router.post(
        '/register',
        tags=['–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è üõ°Ô∏è'],
        summary='üü¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        response_model=UserResponse
        )
async def register(user_data: UserCreate, session: AsyncSession = Depends(get_async_session))-> UserResponse:
    '''–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
    new_user = await create_user(session, user_data)
    return new_user


@router.post(
        '/token',
        tags=['–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è üõ°Ô∏è'],
        summary='üîë –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ (login)',
        )
async def login(form_data: OAuth2PasswordRequestForm = Depends(), session: AsyncSession = Depends(get_async_session)) -> dict[str, str]: # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ç–æ–∫–µ–Ω–æ–º –∏ —Ç–∏–ø–æ–º
    '''–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username –∏ password'''
    user = await get_user_by_username(session, form_data.username)
    if not user or not verify_password(form_data.password, user.hashed_password):
        raise HTTPException(status_code=401, detail='–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
    access_token = create_access_token(
        data={'sub': user.username}, 
        expires_delta=timedelta(minutes=settings.access_token_expire_minutes)
        )
    return {'access_token': access_token, 'token_type': 'bearer'}



'''
–ö–∞–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É (–ª–æ–≥–∏–Ω)?
–ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å HTML-—Ñ–æ—Ä–º–∞ –¥–ª—è –≤—Ö–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ login.html), —Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º:

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤ —Ñ–æ—Ä–º—É –Ω–∞ —Å–∞–π—Ç–µ.
–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ (username, password) –Ω–∞ –±—ç–∫–µ–Ω–¥ —á–µ—Ä–µ–∑ POST-–∑–∞–ø—Ä–æ—Å.
–ë—ç–∫–µ–Ω–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ /auth/token, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.
–ï—Å–ª–∏ –≤—Å–µ –æ–∫, —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç access_token, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç).
–§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–∫–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ localStorage –∏–ª–∏ cookies) –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
'''