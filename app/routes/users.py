from fastapi import APIRouter, Depends
from sqlalchemy.ext.asyncio import AsyncSession

from typing import List

from app.models.users import User, UserRole
from app.schemas.users import UserResponse, UserUpdate, UserCreate, UserUpdateAdmin
from app.crud.users import update_user, get_all_users, delete_user, create_user, update_user_admin, change_role
from app.core.security import get_current_user, is_admin
from app.core.db import get_async_session

router = APIRouter(
    prefix='/users', 
    tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç']
    )


@router.get(
        '/show_me',
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',
        response_model=UserResponse
        )
async def read_users_me(
    current_user: UserResponse = Depends(get_current_user),
    ):
    '''–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–µ—Å–ª–∏ –ø—Ä–æ—à–µ–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é).'''
    return current_user


@router.put(
        '/update_me',
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',
        response_model=UserResponse
        )
async def update_current_user(
    user_data: UserUpdate,
    session: AsyncSession = Depends(get_async_session),
    current_user: User = Depends(get_current_user)
    ):
    '''–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ'''
    return await update_user(session, current_user, user_data)  # –ü–µ—Ä–µ–¥–∞—ë–º –æ–±—ä–µ–∫—Ç User  


@router.get(
        '/get',
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='üü¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        response_model=List[UserResponse])
async def get_all_users_admin(
    session: AsyncSession = Depends(get_async_session), 
    admin_user: User = Depends(is_admin) # –ê–¥–º–∏–Ω—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    ):
    '''–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin).'''
    return await get_all_users(session)


@router.post(
        '/add', 
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='üü¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        response_model=UserResponse,
        )
async def create_user_admin(
    user_data: UserCreate, 
    session: AsyncSession = Depends(get_async_session), 
    admin_user: User = Depends(is_admin) 
    ):
    '''–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é (admin).'''
    return await create_user(session, user_data)


@router.put(
        '/update/{username}',
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='üü¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        response_model=UserResponse
        )
async def update_user_for_admin(
    username: str, 
    user_data: UserUpdateAdmin, 
    session: AsyncSession = Depends(get_async_session), 
    admin_user: User = Depends(is_admin) 
    ):
    '''–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (admin).'''
    return await update_user_admin(session, username, user_data)


@router.put(
        '/role/{username}',
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='üü¢ –ò–∑–º–µ–Ω—è–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ',
        )
async def update_user_role(
    username: str,
    user_data: UserRole,
    session: AsyncSession = Depends(get_async_session),
    admin_user = Depends(is_admin)
    ):
    '''–ò–∑–º–µ–Ω—è–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username (admin).'''
    return await change_role(session, username, user_data) 


@router.delete(
        '/delete/{username}',
        tags=['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üßç'],
        summary='üü¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        )
async def delete_user_admin(
    username: str, 
    session: AsyncSession = Depends(get_async_session), 
    admin_user: User = Depends(is_admin)
    ):
    '''–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (admin).'''
    await delete_user(session, username)
    return {'message': f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–¥–∞–ª–µ–Ω'}

