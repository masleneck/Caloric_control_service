Версия гита
git --version   

Настройка Git:
После того как Git появился на компьютере, нужно ввести свои данные — имя и адрес электронной почты.
Ваши действия в Git будут содержать эту информацию.

Откройте терминал и используйте следующую команду, чтобы добавить своё имя:
git config --global user.name "ваше имя"
        
Для добавления почтового адреса вводите:
git config --global user.email "ваш email"

Обратите внимание, что в командах, указанных выше, есть опция --global. 
Это значит, что такие данные будут сохранены для всех ваших действий в Git и вводить их больше не надо.
Если вы хотите менять эту информацию для разных проектов, то в директории проекта вводите эти же команды,
только без опции --global.

Все мои данные:
$ git config --list

ssh-ключ (нужен для работы с разных устройств) Сервер понимаем что 'Вы' это 'Вы'.
Чтобы сгенерировать ssh ключ мы делаем:

Чтобы перейти в нужный каталог
cd ~/.ssh 

Если таких файлов или даже каталога .ssh у вас нет, вы можете их сгенерировать: Генерируем пару ключей!
ssh-keygen -t ed25519 -C your_mail@example.com

Можно проверить, сгенерировались ли ключи. Используем ls, чтобы увидеть список всех файлов в папке. 
cd ~/.ssh 
ls
Если всё получилось, должно появиться два файла — приватный ключ и публичный ключ с расширением.pub.

После того как создан ключ, его нужно добавить на GitHub. 
Для этого копируем его содержимое с помощью одной из следующих команд:

если вы на Windows — clip < ~/.ssh/id_ed25519.pub
Можно пойти другим путём: открыть файл id_ed25519.pub прямо в папке и просто скопировать содержимое оттуда.

Далее заходим на гитхаб профиль-> настройки-> ssh and gpg keys -> вставляем ключ 

Убедимся что связь с гитхабом установлена:
ssh -T git@github.com
отвечаем yes. Все настроено верно!


Залить проект с нуля:
Заходим на гитхаб. Жмем на '+' в верхнем правом углу 'Create new...' -> 'New repository'
.gitignore - игнорирует файлы, которые я не хочу вносить в изменения

Эта команда клонировала репозиторий с Github по указанному URL-адресу на ваш локальный компьютер. 
В результате выполнения этой команды, в текущей директории, где вы находились в терминале,
будет создана новая папка с именем "Caloric_control_service". 
Внутри этой папки будет содержаться полная копия репозитория, включая все файлы, историю изменений и т.д.

git clone https://github.com/masleneck/Caloric_control_service
cd Caloric_control_service

Найти созданную папку:
find ~ -type d -name "Caloric_control_service"
Мы добавили файлы проекта в папку

Внесем изменения всех файлов в проекте:
git add .

Комитим:
git commit -m "Добавил все файлы проекта"

Отправляю файлы в гитхаб:
git push origin main


git add .
git commit -m 'настроил гитигнор'
пушит ветку в которой я нахожусь
git push

Перейти на ветку
git checkout 'название ветки'

Создать ветку
git checkout -b user_goals (user_goals- название ветки)


Подтянуть изменения на локальную машину:
git pull origin main